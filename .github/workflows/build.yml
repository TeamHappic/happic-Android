name: Android Build
on:
  push:
    branches:
      - develop
defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    if: "!contains(toJSON(github.event.commits.*.message), '[skip action]') && !startsWith(github.ref, 'refs/tags/')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: 'develop'

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      #      - uses: actions/setup-java@v1
      #        with:
      #          java-version: '1.8'

      #      - name: Android Emulator Runner, Test
      #        uses: ReactiveCircus/android-emulator-runner@v2.14.2
      #        with:
      #          api-level: 29
      #          script: ./gradlew connectedCheck

      - name: Sync version.properties file to env
        run: |
          echo "$(cat .version.properties | sed 's/#.*//g' | xargs | tr ' ' '\n')" >> $GITHUB_ENV

      - name: LS
        run: |
          echo $VERSION_NAME
          echo $VERSION_CODE

      - name: Increase Version
        run: |
          increase_version() {
            local delimiter=.
            local array=($(echo "$1" | tr $delimiter '\n'))
            array[$2]=$((array[$2]+1))
            echo $(local IFS=$delimiter ; echo "${array[*]}")
          }
          VERSION_NAME=$(increase_version $VERSION_NAME 1)
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          VERSION_CODE=$(increase_version $VERSION_CODE 0)
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          VERSION=$VERSION_NAME
          VERSION+='.'
          VERSION+=$VERSION_CODE
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: LS
        run: |
          echo $VERSION_NAME
          echo $VERSION_CODE

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: develop
          commit_message: "[release] ${{ env.VERSION }}"
          tagging_message: "${{ env.VERSION }}"
          commit_user_name: Release Bot
          commit_user_email: mym0404@gmail.com

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: 'develop'

#      - name: Build Release
#        run: ./gradlew assembleRelease
#
#      - name: Archive artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          path: app/build/outputs
#
#      - name: Update Release apk name
#        if: ${{ success() }}
#        run: |
#          mv app/build/outputs/apk/release/app-release.apk happic_release.apk
#          echo 'apk=happic_release.apk' >> $GITHUB_ENV
#
#      - name: Upload APK
#        if: ${{ success() }}
#        run: |
#          curl -X POST \
#          -F file=@$apk \
#          -F channels=${{secrets.SLACK_CHANNEL_ID}} \
#          -H "Authorization: Bearer ${{secrets.SLACK_BOT_API_TOKEN}}" \
#          https://slack.com/api/files.upload
#
#      - name: On success, Notify with Slack
#        if: ${{ success() }}
#        uses: rtCamp/action-slack-notify@master
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_ANDROID }}
#          SLACK_TITLE: 'Android Release Success ✅'
#          MSG_MINIMAL: true
#          SLACK_MESSAGE: 'Download release APK!'
#      - name: On fail, Notify with Slack
#        if: ${{ failure() }}
#        uses: rtCamp/action-slack-notify@master
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_ANDROID }}
#          SLACK_TITLE: 'Android Build Failed ❌'
#          MSG_MINIMAL: false
#          SLACK_MESSAGE: 'Check what is going on'
